# Makefile for: http://mxe.cc/
# Get mxe from `git clone https://github.com/mxe/mxe.git`
# Build mxe with packs: `make gcc sdl sdl_gfx sdl_image sdl_mixer glew yaml-cpp`
# and get yaml-cpp master: `git clone https://github.com/jbeder/yaml-cpp.git`
# Or build mxe with yaml: `make gcc sdl sdl_gfx sdl_image sdl_mixer glew yaml-cpp`
#
# ARCH can be either i686-w64-mingw32.static or x86_64-w64-mingw32.static if you installed packs for it.
#
# Example:
#
# make -f Makefile.mxe ARCH=x86_64-w64-mingw32.static
#
# With mxe-supplied yaml-cpp:
#
# make -f Makefile.mxe ARCH=x86_64-w64-mingw32.static MXE_YAML=1
#
# You can also set BIN=whatever.exe to rename the .exe
#
# make -f Makefile.mxe ARCH=x86_64-w64-mingw32.static MXE_YAML=1 BIN=OpenXcomExPlusMinus64.exe
#
# Or build with mxe and yaml-cpp cloned somewhere else than side-by-side with OpenXcom:
#
# make -f Makefile.mxe MXE_DIR=/tmp/mxe YAML_INC=/tmp/yaml-cpp/include/ YAML_SRC=/tmp/yaml-cpp/src/
#

BIN ?= OpenXcomEx.exe
ARCH ?= i686-w64-mingw32.static

# Directories and files
MXE_DIR ?= ../../mxe
PATH := $(MXE_DIR)/usr/bin:$(PATH)
OBJDIR = ../obj/
BINDIR = ../bin/
YAML_INC ?= ../../yaml-cpp/include/
YAML_SRC ?= ../../yaml-cpp/src/

SRCS = $(wildcard *.cpp */*.cpp */*/*.cpp)

# if MXE_YAML is set, use the mxe-supplied one
ifeq ($(strip $(MXE_YAML)),)
	SRCS += $(wildcard $(YAML_SRC)*.cpp $(YAML_SRC)*/*.cpp)
	YAML_LIB =
else
	YAML_INC = $(MXE_DIR)/usr/$(ARCH)/include/yaml-cpp
	YAML_SRC =
	YAML_LIB = -lyaml-cpp
endif

OBJRES = ../obj/OpenXcom_res.o
OBJS = $(OBJRES) $(patsubst %.cpp, $(OBJDIR)%.o, $(notdir $(SRCS)))
RES = ../src/OpenXcomEx.rc ../src/resource.h ../src/version.h ../res/windows/openxcomex.ico

# Arch-specific settings
CXX = $(ARCH)-gcc
RC = $(ARCH)-windres
PKG_CONFIG = $(ARCH)-pkg-config
SDL_CONFIG = $(ARCH)-sdl-config

# Compiler settings
CXXFLAGS = -Wall -O3 -s -std=gnu++11 -I$(YAML_INC) \
	`$(SDL_CONFIG) --cflags` `$(PKG_CONFIG)  SDL_mixer --cflags ` `$(PKG_CONFIG) SDL_gfx --cflags`

LDFLAGS = -s `$(SDL_CONFIG) --libs` $(YAML_LIB) -lopengl32 -lshlwapi `$(PKG_CONFIG) SDL_gfx --libs` \
	-lstdc++ `$(PKG_CONFIG) SDL_mixer --libs` `$(PKG_CONFIG) SDL_image --libs` -ldbghelp

# Rules
all: $(BINDIR)/$(BIN)

$(BINDIR)/$(BIN): $(OBJS)
	$(CXX) $(OBJS) $(LDFLAGS) -o $(BINDIR)/$(BIN)

$(OBJDIR)%.o:: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Basescape/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Battlescape/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Engine/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Engine/Scalers/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Engine/Adlib/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Geoscape/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Interface/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Menu/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Mod/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Savegame/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: Ufopaedia/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: $(YAML_SRC)/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJDIR)%.o:: $(YAML_SRC)/contrib/%.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

$(OBJRES):$(RES)
	$(RC) -o $@ $<

clean:
	rm -f $(BINDIR)/$(BIN) $(OBJDIR)/*.o

.PHONY: all clean

